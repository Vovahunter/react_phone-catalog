{"version":3,"sources":["components/Logo/Logo.tsx","components/MenuButton/MenuButton.tsx","components/PageNavLink/PageNavLink.tsx","components/PageNav/PageNav.tsx","utils/fetchClient.ts","types/Error.ts","api/products.ts","components/Context/Context.tsx","types/Icon.ts","components/Icon/Icon.tsx","helpers/getUniqueItems.tsx","components/TopActionButton/TopActionButton.tsx","utils/searchHelper.ts","components/SearchBar/SearchBar.tsx","utils/useWindowSize.ts","components/Header/Header.tsx","components/FooterNav/FooterNav.tsx","components/ToTopButton/ToTopButton.tsx","components/Footer/Footer.tsx","App.tsx","components/BackButton/BackButton.tsx","components/CartCheckout/CartCheckout.tsx","components/Loader/Loader.tsx","utils/useLocalStorage.ts","components/ProductCart/ProductCart.tsx","components/ProductCardButton/ProductCardButton.tsx","helpers/getProductsBy.tsx","components/ProductCard/ProductCard.tsx","components/ErrorNotification/ErrorNotification.tsx","components/ProductsSlider/ProductsSlider.tsx","pages/CartPage/CartPage.tsx","utils/styleString.ts","components/PageNavStatus/PageNavStatus.tsx","components/Selector/Selector.tsx","components/Pagination/Pagination.tsx","components/NoResults/NoResults.tsx","components/ProductsList/ProductsList.tsx","pages/CategoryPage/CategoryPage.tsx","components/Banner/Banner.tsx","components/ShopByCategory/ShopByCategory.tsx","pages/HomePage/HomePage.tsx","components/NotFound/NotFound.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/ProductDetails/ProductDetails.tsx","pages/ProductDetailsPage/ProductDetailsPage.tsx","index.tsx"],"names":["Logo","to","src","alt","MenuButton","isOpened","onClick","className","type","classNames","icon__cross","PageNavLink","text","isActive","menu__item","PageNav","navType","nav","menu__list","pageNavList","map","navItem","link","title","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","a","method","data","options","body","JSON","stringify","headers","fetch","response","ok","Error","json","client","getProductDetails","productId","IconType","Context","createContext","products","selectedProduct","parse","localStorage","getItem","cart","favorite","error","isLoading","setProducts","setSelectedProduct","setCart","setFavorite","setError","setIsLoading","ContextProvider","children","cartStorage","favoriteStorage","selectedProductStorage","useState","contextValue","handleGetProducts","productList","GET_PRODUCTS","useEffect","Provider","value","Icon","addClassName","getUniqueItems","array","getKey","seenItems","filter","item","key","TopActionButton","useContext","countType","countItems","id","FAVORITE","CART","length","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","delete","Array","isArray","part","append","set","SearchBar","location","useLocation","navigate","useNavigate","useSearchParams","searchParams","query","get","inputValue","setInputValue","currentLocation","pathname","slice","useMemo","handleDebounceQuery","debounce","event","target","search","trim","handleDeleteQuery","placeholder","onChange","handleChangeQuery","SEARCH","role","tabIndex","onKeyDown","CLOSE","useWindowSize","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","useParams","setIsOpened","isSearchBar","setIsSearchBar","searchBarCondition","productCategory","some","includes","cartCondition","favoriteCondition","handleIsOpened","useCallback","menuStatus","page__menu","FooterNav","footerNavList","href","rel","ToTopButton","scrollTo","top","left","behavior","ARROW_UP","Footer","App","BackButton","history","back","ARROW_LEFT","CartCheckout","isClicked","setIsClicked","cartTotalPrice","reduce","sum","current","price","discount","timer","clearInterval","handleCheckoutClick","Loader","useLocalStorage","initialValue","storedValue","setStoredValue","valueToStore","Function","setItem","ProductCart","product","imageUrl","name","setCartLocalStorage","cartItem","defaultCountValue","counter","cartItemValue","setCartItemValue","isImage","setIsImage","cartProduct","cartList","disabled","currentItems","itemToRemove","findLastIndex","splice","prev","handleRemoveItem","MINUS","MINUS_DISABLED","handleAddItem","PLUS","ProductCardButton","size","inStorage","isInStorage","setIsInStorage","cartItemIsSelected","favoriteItemIsSelected","setFavoritesLocalStorage","favoriteSelectedClassName","buttonType","storage","setStorage","setItemLocalStorage","productsInStorage","productItem","handleButtonClick","getProductLink","searchProduct","ProductCard","ram","capacity","screen","discountPrice","currentProduct","find","handleGetProductDetails","productItemId","currentProductDetails","GET_PRODUCT_DETAILS","handleCardClick","ErrorNotification","ProductsSlider","position","setPosition","itemsInSlider","setItemsInSlider","touchPosition","setTouchPosition","currentCategory","split","category","productCategoryList","itemType","sliderTitle","sliderProductList","sort","product1","product2","getHotPriceProducts","getBrandNewProducts","productOnScreen","getSuggestedProducts","sliderSettings","step","itemWidth","itemsOnPage","animationDuration","infinite","disablePrevButton","disableNextButton","slideLimit","transformOptions","handleClickButton","arrowDirection","clearTimeout","ARROW_LEFT_DISABLED","ARROW_RIGHT","ARROW_RIGHT_DISABLED","style","maxWidth","onTouchStart","touchDown","touches","clientX","handleTouchStart","onTouchMove","diff","handleTouchMove","transform","transition","CartPage","setCartList","list","cartItems","uuid","capitalizeFirstLetter","charAt","toUpperCase","PageNavStatus","isProduct","setIsProduct","currentPage","currentPageTitle","currentProductTitle","then","HOME","Selector","selectedValue","setSelectedValue","perPage","selectorTitle","selectorSortByList","All","Alphabetically","Newest","Cheapest","selectorItemsOnPageList","selectorParams","selectorList","keys","getRouteParams","selectorType","option","sortByParams","page","itemsOnPageParams","sortItem","onPageItem","getSelectorValue","onMouseLeave","ARROW_DOWN","ARROW_UP_DISABLED","handleOptionClick","Pagination","getTotalPages","Math","ceil","paginationList","from","_","i","disabledLeftButton","disabledRightButton","handleArrowClick","pageNumber","pageItem","handlePageClick","NoResults","ProductsList","setCategory","categoryProducts","setCategoryProducts","itemsInList","setItemsInList","currentCategoryPage","sortedProductList","productBaseList","sortedProducts","item1","item2","age","localeCompare","param","toLowerCase","getProductSortedList","leftLimit","rightLimit","visibleProducts","categoryCount","noResultTitle","productListSettings","getCategory","categoryItems","getCategoryProducts","CategoryPage","Banner","bannerImages","index","image","ShopByCategory","phones","tablets","accessories","HomePage","NotFound","NotFoundPage","ProductDetails","capacityList","colourList","defaultImage","images","defaultImagesLength","productInfo","setProductInfo","Screen","Resolution","Processor","RAM","Android","Bluetooth","Battery","productOptions","setProductOptions","selectedCapacity","setSelectedCapacity","selectedColour","setSelectedColour","selectedImage","setSelectedImage","optionsMainList","optionsTotalList","getProductInfo","valueId","itemHeight","display","screenSize","screenResolution","hardware","cpu","flash","android","os","connectivity","bluetooth","battery","standbyTime","touchAction","clientY","imageItem","imageIndex","ARROW_DOWN_DISABLED","colourItem","colourIndex","capacityItem","description","ProductDetailsPage","Root","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3993c56b.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const Logo: React.FC = () => (\n  <Link to=\"/\">\n    <img\n      src=\"./img/icons/logo.svg\"\n      alt=\"logo\"\n    />\n  </Link>\n);\n","import classNames from 'classnames';\nimport './MenuButton.scss';\n\ntype Props = {\n  isOpened: boolean;\n  onClick: (status: boolean) => void;\n};\n\nexport const MenuButton: React.FC<Props> = ({ isOpened, onClick }) => (\n  <button\n    className=\"\n      top-actions__link\n      top-actions__link--button\"\n    type=\"button\"\n    onClick={() => onClick(!isOpened)}\n  >\n    <span\n      className={classNames(\n        'icon',\n        'icon__menu',\n        { 'icon__menu-burger': !isOpened },\n        { icon__cross: isOpened },\n      )}\n    />\n  </button>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { PageNavLinkType } from '../../types/PageNavLink';\nimport './PageNavLink.scss';\n\ntype Props = {\n  to: string;\n  text: string;\n  type: PageNavLinkType;\n};\n\nexport const PageNavLink: React.FC<Props> = ({\n  to,\n  text,\n  type,\n}) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'nav__link',\n      { 'nav__link--active': isActive },\n      { menu__item: type === 'menu' },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport { PageNavLink } from '../PageNavLink';\nimport pageNavList from '../../api/headerNav.json';\nimport { PageNavLinkType } from '../../types/PageNavLink';\nimport './PageNav.scss';\n\ntype Props = {\n  type: PageNavLinkType;\n};\n\nexport const PageNav: React.FC<Props> = ({ type }) => {\n  const navType = (type === 'menu')\n    ? 'menu'\n    : 'header';\n\n  return (\n    <div\n      className={classNames(\n        { nav: navType === 'header' },\n        { menu__list: navType === 'menu' },\n      )}\n    >\n      {pageNavList.map(navItem => (\n        <PageNavLink\n          key={navItem.title}\n          to={navItem.link}\n          text={navItem.title}\n          type={navType}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nasync function request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: unknown = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  await wait(300);\n  const response = await fetch(BASE_URL + url, options);\n\n  if (!response.ok) {\n    throw new Error();\n  }\n\n  return response.json();\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: unknown) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum Error {\n  PAGE_NOT_FOUND = 'Page not found',\n  GET_PRODUCTS = 'Unable to get the products',\n  GET_PRODUCT_DETAILS = 'Unable to get the product\\'s details',\n}\n","import { client } from '../utils/fetchClient';\nimport { Product } from '../types/Product';\nimport { ProductDetailsType } from '../types/ProductDetails';\n\nexport const getProducts = () => {\n  return client.get<Product[]>('/products.json');\n};\n\nexport const getProductDetails = (productId: string) => {\n  return client.get<ProductDetailsType>(`/products/${productId}.json`);\n};\n","import React, {\n  createContext,\n  ReactNode,\n  useEffect,\n  useState,\n} from 'react';\nimport { getProducts } from '../../api/products';\nimport { ContextValue } from '../../types/ContextValue';\nimport { Product } from '../../types/Product';\nimport { Error } from '../../types/Error';\nimport { ProductDetailsType } from '../../types/ProductDetails';\n\nexport const Context = createContext<ContextValue>({\n  products: [],\n  selectedProduct: JSON.parse(`${localStorage.getItem('selectedProduct')}`),\n  cart: [],\n  favorite: [],\n  error: null,\n  isLoading: false,\n  setProducts: () => {},\n  setSelectedProduct: () => {},\n  setCart: () => {},\n  setFavorite: () => {},\n  setError: () => {},\n  setIsLoading: () => {},\n});\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const ContextProvider: React.FC<Props> = ({ children }) => {\n  const cartStorage = JSON.parse(`${localStorage.getItem('cart') || '[]'}`);\n  const favoriteStorage = JSON.parse(`${localStorage.getItem('favorite') || '[]'}`);\n  const selectedProductStorage = JSON.parse(`${localStorage.getItem('selectedProduct')}`);\n\n  const [products, setProducts] = useState<Product[]>([]);\n  const [\n    selectedProduct,\n    setSelectedProduct,\n  ] = useState<ProductDetailsType>(selectedProductStorage);\n  const [cart, setCart] = useState<Product[]>(cartStorage);\n  const [favorite, setFavorite] = useState<Product[]>(favoriteStorage);\n  const [error, setError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const contextValue: ContextValue = {\n    products,\n    selectedProduct,\n    cart,\n    favorite,\n    error,\n    isLoading,\n    setProducts,\n    setSelectedProduct,\n    setCart,\n    setFavorite,\n    setError,\n    setIsLoading,\n  };\n\n  const handleGetProducts = async () => {\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      const productList = await getProducts();\n\n      setProducts(productList);\n    } catch {\n      setError(Error.GET_PRODUCTS);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    handleGetProducts();\n  }, []);\n\n  return (\n    <Context.Provider\n      value={contextValue}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","export enum IconType {\n  ARROW_DOWN = 'icon__arrow-down',\n  ARROW_DOWN_DISABLED = 'icon__arrow-down--disabled',\n  ARROW_LEFT = 'icon__arrow-left',\n  ARROW_LEFT_DISABLED = 'icon__arrow-left--disabled',\n  ARROW_RIGHT = 'icon__arrow-right',\n  ARROW_RIGHT_DISABLED = 'icon__arrow-right--disabled',\n  ARROW_UP = 'icon__arrow-up',\n  ARROW_UP_DISABLED = 'icon__arrow-up--disabled',\n  CART = 'icon__cart',\n  CLOSE = 'icon__close',\n  CLOSE_DISABLED = 'icon__close--disabled',\n  CROSS = 'icon__cross',\n  FAVORITE = 'icon__favorite',\n  FAVORITE_FILLED = 'icon__favorite--active',\n  HOME = 'icon__home',\n  MENU_BURGER = 'icon__menu-burger',\n  MINUS = 'icon__minus',\n  MINUS_DISABLED = 'icon__minus--disabled',\n  PLUS = 'icon__plus',\n  SEARCH = 'icon__search',\n}\n","import classNames from 'classnames';\nimport { IconType } from '../../types/Icon';\nimport './Icon.scss';\n\ntype Props = {\n  type: IconType;\n  addClassName?: string;\n};\n\nexport const Icon: React.FC<Props> = ({ type, addClassName }) => {\n  return (\n    <span\n      className={classNames(\n        'icon',\n        type,\n        addClassName,\n      )}\n    />\n  );\n};\n","export function getUniqueItems<T>(\n  array: T[],\n  getKey: (item: T) => string | number,\n) {\n  const seenItems: Record<string, boolean> = {};\n\n  return array.filter((item) => {\n    const key = getKey(item);\n\n    if (seenItems[key]) {\n      return false;\n    }\n\n    seenItems[key] = true;\n\n    return true;\n  });\n}\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Context } from '../Context';\nimport { Icon } from '../Icon';\nimport { getUniqueItems } from '../../helpers/getUniqueItems';\nimport { TopActionButtonType } from '../../types/PageNavLink';\nimport { IconType } from '../../types/Icon';\nimport './TopActionButton.scss';\n\ntype Props = {\n  type: TopActionButtonType;\n};\n\nexport const TopActionButton: React.FC<Props> = ({ type }) => {\n  const { favorite, cart } = useContext(Context);\n\n  const countType = (type === 'favorite')\n    ? favorite\n    : cart;\n\n  const countItems = getUniqueItems(countType, (item) => item.id);\n\n  return (\n    <div\n      className={classNames(\n        'top-actions__item',\n        { 'top-actions__item--favorite': type === 'favorite' },\n        { 'top-actions__item--cart': type === 'cart' },\n      )}\n    >\n      <Link\n        to={`/${type}`}\n        className=\"top-actions__link\"\n      >\n        {type === 'favorite'\n          && (\n            <Icon\n              type={IconType.FAVORITE}\n            />\n          )}\n\n        {type === 'cart'\n          && (\n            <Icon\n              type={IconType.CART}\n            />\n          )}\n\n        {countType\n          && countType.length > 0\n          && (\n            <span className=\"top-actions__item-count\">\n              {countItems.length}\n            </span>\n          )}\n      </Link>\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import {\n  useMemo,\n  useState,\n  ChangeEvent,\n} from 'react';\nimport {\n  useLocation,\n  useNavigate,\n  useSearchParams,\n} from 'react-router-dom';\nimport { debounce } from 'lodash';\nimport { Icon } from '../Icon';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { IconType } from '../../types/Icon';\nimport './SearchBar.scss';\n\nexport const SearchBar: React.FC = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n\n  const [inputValue, setInputValue] = useState(query);\n\n  const currentLocation = location.pathname.slice(1);\n\n  useMemo(() => {\n    setInputValue(query);\n  }, [query]);\n\n  const handleDebounceQuery = debounce(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n\n      navigate({\n        search: getSearchWith(\n          searchParams,\n          { query: value.trim() || null },\n        ),\n      });\n    }, 1000,\n  );\n\n  const handleChangeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInputValue(value);\n    handleDebounceQuery(event);\n  };\n\n  const handleDeleteQuery = () => {\n    setInputValue('');\n\n    navigate({\n      search: getSearchWith(\n        searchParams,\n        { query: null },\n      ),\n    });\n  };\n\n  return (\n    <div\n      className=\"\n        top-actions__search\n        search-panel\"\n    >\n      <input\n        className=\"search-panel__input\"\n        type=\"text\"\n        placeholder={`Search in ${currentLocation}...`}\n        onChange={(event) => handleChangeQuery(event)}\n        value={inputValue}\n      />\n\n      {!inputValue && (\n        <Icon\n          type={IconType.SEARCH}\n          addClassName=\"search-panel__icon\"\n        />\n      )}\n\n      {inputValue.length > 0 && (\n        <div\n          className=\"search-panel__icon\"\n          role=\"button\"\n          tabIndex={0}\n          onKeyDown={() => handleDeleteQuery()}\n          onClick={() => handleDeleteQuery()}\n        >\n          <Icon\n            type={IconType.CLOSE}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n","import {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport {\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Logo } from '../Logo';\nimport { MenuButton } from '../MenuButton';\nimport { PageNav } from '../PageNav';\nimport { TopActionButton } from '../TopActionButton';\nimport { SearchBar } from '../SearchBar';\nimport { useWindowSize } from '../../utils/useWindowSize';\nimport productCategory from '../../api/productCategory.json';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  const location = useLocation();\n  const { productId = '' } = useParams();\n\n  const { width } = useWindowSize();\n\n  const [isOpened, setIsOpened] = useState(false);\n  const [isSearchBar, setIsSearchBar] = useState(false);\n\n  const productCategoryList = productCategory.map(item => item.type);\n\n  const searchBarCondition = productCategoryList.some(\n    item => location.pathname.includes(item),\n  ) && !productId;\n\n  const cartCondition = location.pathname.includes('cart');\n  const favoriteCondition = location.pathname.includes('favorite');\n\n  const handleIsOpened = useCallback((menuStatus: boolean) => {\n    setIsOpened(menuStatus);\n  }, []);\n\n  useEffect(() => {\n    setIsOpened(false);\n  }, [location]);\n\n  useEffect(() => {\n    if (width > 400) {\n      setIsSearchBar(true);\n    } else {\n      setIsSearchBar(false);\n    }\n  }, [width]);\n\n  return (\n    <header className=\"page__header header\">\n      <div className=\"header__main-container\">\n        {!cartCondition && (\n          <div\n            className=\"\n              header__menu\n              top-actions__menu\"\n          >\n            <MenuButton\n              isOpened={isOpened}\n              onClick={handleIsOpened}\n            />\n          </div>\n        )}\n\n        <div\n          className={classNames(\n            'header__logo',\n            { 'header__logo--cart': cartCondition },\n          )}\n        >\n          <Logo />\n        </div>\n\n        {!cartCondition && (\n          <nav className=\"header__nav\">\n            <PageNav\n              type=\"header\"\n            />\n          </nav>\n        )}\n\n        <div\n          className=\"\n            header__actions\n            top-actions\"\n        >\n          {searchBarCondition\n            && isSearchBar\n            && (\n              <SearchBar />\n            )}\n\n          {favoriteCondition\n            && isSearchBar\n            && (\n              <SearchBar />\n            )}\n\n          {!cartCondition && (\n            <TopActionButton\n              type=\"favorite\"\n            />\n          )}\n\n          <TopActionButton\n            type=\"cart\"\n          />\n        </div>\n      </div>\n\n      {!cartCondition && (\n        <div className=\"header__menu-list-container\">\n          <nav\n            className={classNames(\n              'header__menu-list',\n              'menu',\n              { page__menu: !isOpened },\n              { 'page__menu--opened': isOpened },\n            )}\n          >\n            <PageNav\n              type=\"menu\"\n            />\n          </nav>\n        </div>\n      )}\n    </header>\n  );\n};\n","import footerNavList from '../../api/footerNav.json';\nimport './FooterNav.scss';\n\nexport const FooterNav: React.FC = () => {\n  return (\n    <div className=\"footer__nav\">\n      {footerNavList.map(navItem => (\n        <a\n          key={navItem.title}\n          href={navItem.link}\n          className=\"footer__link\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {navItem.title}\n        </a>\n      ))}\n    </div>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { Icon } from '../Icon';\nimport { IconType } from '../../types/Icon';\nimport './ToTopButton.scss';\n\nexport const ToTopButton: React.FC = () => {\n  const location = useLocation();\n\n  const handleScrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <Link\n      className=\"footer__button-top button-top\"\n      to={`${location.pathname}`}\n      type=\"button\"\n      onClick={handleScrollToTop}\n    >\n      <p className=\"button-top__text\">\n        Back to top\n      </p>\n\n      <Icon\n        type={IconType.ARROW_UP}\n        addClassName=\"button-top__icon\"\n      />\n    </Link>\n  );\n};\n","import { Logo } from '../Logo';\nimport { FooterNav } from '../FooterNav';\nimport { ToTopButton } from '../ToTopButton';\nimport './Footer.scss';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <Logo />\n\n        <FooterNav />\n\n        <ToTopButton />\n      </div>\n    </footer>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"page__body\">\n        <Header />\n\n        <main>\n          <div className=\"container\">\n            <div className=\"grid grid--desktop\">\n              <Outlet />\n            </div>\n          </div>\n        </main>\n\n        <Footer />\n      </div>\n    </div>\n  );\n};\n","import { Icon } from '../Icon';\nimport { IconType } from '../../types/Icon';\nimport './BackButton.scss';\n\nexport const BackButton: React.FC = () => (\n  <button\n    className=\"\n      back-button\n      grid__item--tablet-1-12\n      grid__item--desktop-1-24\"\n    type=\"button\"\n    data-cy=\"backButton\"\n    onClick={() => window.history.back()}\n  >\n    <Icon\n      type={IconType.ARROW_LEFT}\n      addClassName=\"back-button__arrow\"\n    />\n\n    Back\n  </button>\n);\n","import {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { Context } from '../Context';\nimport { Product } from '../../types/Product';\nimport './CartCheckout.scss';\n\nexport const CartCheckout: React.FC = () => {\n  const { cart } = useContext(Context);\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  const cartTotalPrice = () => {\n    const currentItems = JSON.parse(localStorage.getItem('cart') || '[]');\n\n    return currentItems.reduce(\n      // eslint-disable-next-line max-len\n      (sum: number, current: Product) => sum + (current.price - ((current.price / 100) * current.discount)), 0,\n    );\n  };\n\n  const handleCheckoutClick = () => {\n    let timer;\n\n    clearInterval(timer);\n\n    setIsClicked(true);\n\n    timer = setTimeout(() => {\n      setIsClicked(false);\n    }, 5000);\n  };\n\n  useEffect(() => {\n    cartTotalPrice();\n  }, [cart.length]);\n\n  return (\n    <div\n      className=\"\n        cart__checkout\n        checkout\n        grid__item--tablet-1-12\n        grid__item--desktop-17-24\"\n      data-cy=\"productQuantity\"\n    >\n      <div className=\"checkout__total-price\">\n        {`$${cartTotalPrice()}`}\n      </div>\n\n      <p className=\"checkout__total-for\">\n        {`Total for ${cart.length} items`}\n      </p>\n\n      <button\n        className=\"checkout__check-button\"\n        type=\"button\"\n        onClick={() => handleCheckoutClick()}\n      >\n        {isClicked\n          ? 'We are sorry, but this feature is not implemented yet'\n          : 'Checkout'}\n      </button>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div\n    className=\"\n      Loader\n      grid__item--tablet-6-7\n      grid__item--desktop-12-13\"\n    data-cy=\"loader\"\n  >\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState } from 'react';\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item\n        ? JSON.parse(item)\n        : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    const valueToStore = value instanceof Function\n      ? value(storedValue)\n      : value;\n\n    setStoredValue(valueToStore);\n\n    if (typeof window !== 'undefined') {\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    }\n  };\n\n  return [setValue] as const;\n}\n","import {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { Context } from '../Context';\nimport { Icon } from '../Icon';\nimport { useLocalStorage } from '../../utils/useLocalStorage';\nimport { useWindowSize } from '../../utils/useWindowSize';\nimport { IconType } from '../../types/Icon';\nimport { Product } from '../../types/Product';\nimport './ProductCart.scss';\n\ntype Props = {\n  product: Product,\n};\n\nexport const ProductCart: React.FC<Props> = ({ product }) => {\n  const {\n    imageUrl,\n    name,\n    price,\n    discount,\n  } = product;\n\n  const { cart, setCart } = useContext(Context);\n\n  const { width } = useWindowSize();\n\n  const [setCartLocalStorage] = useLocalStorage('cart', cart);\n\n  const cartItem = cart.filter(item => (\n    product.name === item.name))[0];\n\n  const defaultCountValue = () => {\n    let counter = 0;\n\n    cart.forEach(item => {\n      if (item.id === cartItem?.id) {\n        counter += 1;\n      }\n    });\n\n    return counter;\n  };\n\n  const [cartItemValue, setCartItemValue] = useState(defaultCountValue());\n  const [isImage, setIsImage] = useState(false);\n\n  const handleDeleteItem = () => {\n    setCartLocalStorage(cart.filter(cartProduct => (\n      cartProduct.name !== cartItem.name\n    )));\n\n    setCart(cartList => cartList?.filter(item => item.id !== product.id));\n    setCartItemValue(0);\n  };\n\n  const handleAddItem = () => {\n    const currentItems = JSON.parse(localStorage.getItem('cart') || '[]');\n\n    setCart([...currentItems, cartItem]);\n    setCartLocalStorage([...currentItems, cartItem]);\n    setCartItemValue(prev => prev + 1);\n  };\n\n  const handleRemoveItem = () => {\n    const currentItems = JSON.parse(localStorage.getItem('cart') || '[]');\n    const itemToRemove = currentItems.findLastIndex((item: Product) => (\n      item.id === cartItem.id\n    ));\n\n    currentItems.splice(itemToRemove, 1);\n\n    setCart([...currentItems]);\n    setCartLocalStorage([...currentItems]);\n    setCartItemValue(prev => prev - 1);\n  };\n\n  useEffect(() => {\n    defaultCountValue();\n  }, [cart.length]);\n\n  useEffect(() => {\n    if (width > 440) {\n      setIsImage(true);\n    } else {\n      setIsImage(false);\n    }\n  }, [width]);\n\n  return (\n    <li className=\"cart__item\">\n      <button\n        className=\"cart__item--close-icon\"\n        type=\"button\"\n        onClick={() => handleDeleteItem()}\n      >\n        <Icon\n          type={IconType.CLOSE}\n        />\n      </button>\n\n      {isImage && (\n        <div className=\"cart__image--container\">\n          <img\n            src={imageUrl}\n            alt=\"product\"\n            className=\"cart__image\"\n          />\n        </div>\n      )}\n\n      <div className=\"cart__item-title\">\n        {name}\n      </div>\n\n      <div\n        className=\"\n          cart__buttons\n          buttons\"\n      >\n        <button\n          className=\"buttons__button\"\n          type=\"button\"\n          disabled={cartItemValue === 1}\n          onClick={() => handleRemoveItem()}\n        >\n          {cartItemValue > 1 && (\n            <Icon\n              type={IconType.MINUS}\n            />\n          )}\n\n          {cartItemValue === 1 && (\n            <Icon\n              type={IconType.MINUS_DISABLED}\n            />\n          )}\n        </button>\n\n        <div className=\"cart__quantity\">\n          {cartItemValue}\n        </div>\n\n        <button\n          className=\"buttons__button\"\n          type=\"button\"\n          onClick={() => handleAddItem()}\n        >\n          <Icon\n            type={IconType.PLUS}\n          />\n        </button>\n      </div>\n\n      <div className=\"cart__price\">\n        {`$${(price - (price / 100) * discount) * cartItemValue}`}\n      </div>\n    </li>\n  );\n};\n","import { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport { Context } from '../Context';\nimport { Icon } from '../Icon';\nimport { useLocalStorage } from '../../utils/useLocalStorage';\nimport {\n  ButtonSizeType,\n  TopActionButtonType,\n} from '../../types/PageNavLink';\nimport { Product } from '../../types/Product';\nimport { IconType } from '../../types/Icon';\nimport './ProductCardButton.scss';\n\ntype Props = {\n  product: Product;\n  type: TopActionButtonType;\n  size: ButtonSizeType;\n};\n\nexport const ProductCardButton: React.FC<Props> = ({\n  product,\n  type,\n  size,\n}) => {\n  const {\n    cart,\n    favorite,\n    setCart,\n    setFavorite,\n  } = useContext(Context);\n\n  const inStorage = (type === 'cart')\n    ? cart?.some(item => item.id === product?.id)\n    : favorite?.some(item => item.id === product?.id);\n\n  const [isInStorage, setIsInStorage] = useState(inStorage);\n\n  const cartItemIsSelected = (type === 'cart') && isInStorage;\n  const favoriteItemIsSelected = (type === 'favorite') && isInStorage;\n\n  const [setFavoritesLocalStorage] = useLocalStorage('favorite', favorite);\n  const [setCartLocalStorage] = useLocalStorage('cart', cart);\n\n  const favoriteSelectedClassName = favoriteItemIsSelected\n    ? 'icon__favorite--active'\n    : '';\n\n  const handleButtonClick = (buttonType: TopActionButtonType) => {\n    const storage = (buttonType === 'cart')\n      ? cart\n      : favorite;\n\n    const setStorage = (buttonType === 'cart')\n      ? setCart\n      : setFavorite;\n\n    const setItemLocalStorage = (buttonType === 'cart')\n      ? setCartLocalStorage\n      : setFavoritesLocalStorage;\n\n    if (storage && isInStorage) {\n      const productsInStorage = [...storage\n        .filter(productItem => productItem.id !== product.id)];\n\n      setItemLocalStorage(productsInStorage);\n      setStorage(productsInStorage);\n      setIsInStorage(false);\n    } else if (!storage?.length) {\n      const productsInStorage = [product];\n\n      setItemLocalStorage(productsInStorage);\n      setStorage(productsInStorage);\n      setIsInStorage(true);\n    } else {\n      const productsInStorage = [...storage, product];\n\n      setItemLocalStorage(productsInStorage);\n      setStorage(productsInStorage);\n      setIsInStorage(true);\n    }\n\n    setIsInStorage(!isInStorage);\n  };\n\n  return (\n    <button\n      className={classNames(\n        `card-buttons__add-${type}`,\n        `card-buttons__add-${type}--${size}`,\n        {\n          'card-buttons__add-cart--selected': cartItemIsSelected,\n        },\n        {\n          'card-buttons__add-favorite--selected': favoriteItemIsSelected,\n        },\n      )}\n      type=\"button\"\n      onClick={() => handleButtonClick(type)}\n    >\n      {(type === 'cart')\n        && !cartItemIsSelected\n        && ('Add to cart')}\n\n      {(type === 'cart')\n        && cartItemIsSelected\n        && ('Added to cart')}\n\n      {(type === 'favorite')\n        && (\n          <Icon\n            type={IconType.FAVORITE}\n            addClassName={favoriteSelectedClassName}\n          />\n        )}\n    </button>\n  );\n};\n","import { Product } from '../types/Product';\n\nexport const getHotPriceProducts = (products: Product[]) => {\n  return products\n    .filter(product => product.discount > 0)\n    .sort((product1, product2) => (\n      ((product2.price / 100) * product2.discount)\n      - ((product1.price / 100) * product1.discount)\n    ));\n};\n\nexport const getBrandNewProducts = (products: Product[]) => {\n  return products\n    .filter(product => product.discount === 0)\n    .sort((product1, product2) => (\n      ((product2.price / 100) * product2.discount)\n      - ((product1.price / 100) * product1.discount)\n    ));\n};\n\nexport const getSuggestedProducts = (\n  products: Product[],\n  category?: string,\n  productOnScreen?: string,\n) => {\n  return products\n    .filter(product => (product.type === category)\n      && (productOnScreen !== product.id))\n    .sort((product1, product2) => (\n      product2.price - product1.price\n    ));\n};\n\nexport const getProductLink = (searchProduct: Product) => {\n  switch (searchProduct.type) {\n    case 'phone':\n      return `../phones/${searchProduct.id}`;\n\n    case 'tablet':\n      return `../tablets/${searchProduct.id}`;\n\n    case 'accessories':\n      return `../accessories/${searchProduct.id}`;\n\n    default:\n      return '';\n  }\n};\n","import { useCallback, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../Context';\nimport { ProductCardButton } from '../ProductCardButton';\nimport { getProductDetails } from '../../api/products';\nimport { getProductLink } from '../../helpers/getProductsBy';\nimport { Error } from '../../types/Error';\nimport { Product } from '../../types/Product';\nimport './ProductCard.scss';\n\ntype Props = {\n  product: Product,\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    products,\n    setSelectedProduct,\n    setError,\n    setIsLoading,\n  } = useContext(Context);\n\n  const {\n    type,\n    id,\n    imageUrl,\n    name,\n    price,\n    ram,\n    capacity,\n    screen,\n    discount,\n  } = product;\n\n  const discountPrice = price - (price / 100) * discount;\n\n  const currentProduct = products.find(\n    productItem => productItem.id === id,\n  );\n\n  const handleGetProductDetails = async (productItemId: string) => {\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      const currentProductDetails = await getProductDetails(productItemId);\n\n      setSelectedProduct(currentProductDetails);\n    } catch {\n      setError(Error.GET_PRODUCT_DETAILS);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCardClick = useCallback(() => {\n    if (currentProduct) {\n      handleGetProductDetails(currentProduct.id);\n    }\n  }, [currentProduct]);\n\n  return (\n    <div className=\"product-card\">\n      <Link\n        className=\"product-card__link\"\n        to={getProductLink(product)}\n        onClick={() => handleCardClick()}\n      />\n\n      <div className=\"product-card__image\">\n        <img\n          className=\"product-card__pic\"\n          src={`${imageUrl}`}\n          alt={`${type}`}\n        />\n      </div>\n\n      <h3 className=\"product-card__title\">\n        {name}\n      </h3>\n\n      <div className=\"product-card__price\">\n        <span className=\"product-card__new-price\">\n          {discount > 0\n            ? `$${discountPrice}`\n            : `$${price}`}\n        </span>\n\n        {discount > 0 && (\n          <span className=\"product-card__old-price\">\n            {`$${price}`}\n          </span>\n        )}\n      </div>\n\n      <div className=\"product-card__features\">\n        <span className=\"product-card__feature-item\">\n          Screen\n\n          <span className=\"product-card__feature-info\">\n            {screen}\n          </span>\n        </span>\n\n        <span className=\"product-card__feature-item\">\n          Capacity\n\n          <span className=\"product-card__feature-info\">\n            {capacity}\n          </span>\n        </span>\n\n        <span className=\"product-card__feature-item\">\n          RAM\n\n          <span className=\"product-card__feature-info\">\n            {ram}\n          </span>\n        </span>\n      </div>\n\n      <div className=\"product-card__buttons\">\n        <div className=\"card-buttons\">\n          <ProductCardButton\n            product={product}\n            type=\"cart\"\n            size=\"small\"\n          />\n\n          <ProductCardButton\n            product={product}\n            type=\"favorite\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Error } from '../../types/Error';\nimport './ErrorNotification.scss';\n\ntype Props = {\n  error: Error,\n};\n\nexport const ErrorNotification: React.FC<Props> = ({ error }) => (\n  <h1\n    className=\"\n      error-notification\n      grid__item--tablet-1-12\n      grid__item--desktop-1-24\"\n  >\n    {`...${error}...`}\n  </h1>\n);\n","import {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Context } from '../Context';\nimport { ProductCard } from '../ProductCard';\nimport { Icon } from '../Icon';\nimport { ErrorNotification } from '../ErrorNotification';\nimport {\n  getBrandNewProducts,\n  getHotPriceProducts,\n  getSuggestedProducts,\n} from '../../helpers/getProductsBy';\nimport productCategoryList from '../../api/productCategory.json';\nimport { useWindowSize } from '../../utils/useWindowSize';\nimport {\n  SliderButtonType,\n  SliderType,\n} from '../../types/SliderType';\nimport { IconType } from '../../types/Icon';\nimport './ProductsSlider.scss';\n\ntype Props = {\n  type: SliderType,\n};\n\nexport const ProductsSlider: React.FC<Props> = ({ type }) => {\n  const { products, error } = useContext(Context);\n\n  const { productId = '' } = useParams();\n  const location = useLocation();\n  const { width } = useWindowSize();\n\n  const [position, setPosition] = useState(0);\n  const [itemsInSlider, setItemsInSlider] = useState(4);\n  const [touchPosition, setTouchPosition] = useState<number | null>(null);\n\n  const currentCategory = location.pathname.split('/').slice(1)[0];\n\n  const productCategory = useMemo(() => {\n    if (!currentCategory.length) {\n      return 'home';\n    }\n\n    const category = productCategoryList.filter(\n      item => item.type === currentCategory,\n    )[0];\n\n    return category\n      ? category.itemType\n      : 'phone';\n  }, [location]);\n\n  const sliderTitle = useMemo(() => {\n    switch (type) {\n      case 'hot-prices':\n        return 'Hot prices';\n\n      case 'new-models':\n        return 'Brand new models';\n\n      case 'recommendations':\n        return 'You may also like';\n\n      default:\n        return '';\n    }\n  }, [type]);\n\n  const sliderProductList = useMemo(() => {\n    switch (type) {\n      case 'hot-prices':\n        return getHotPriceProducts(products);\n\n      case 'new-models':\n        return getBrandNewProducts(products);\n\n      default:\n      case 'recommendations':\n        return getSuggestedProducts(products, productCategory, productId);\n    }\n  }, [type, productId]);\n\n  const sliderSettings = {\n    step: 1,\n    itemWidth: 288,\n    itemsOnPage: itemsInSlider,\n    animationDuration: 500,\n    infinite: false,\n  };\n\n  const {\n    step,\n    itemWidth,\n    itemsOnPage,\n    animationDuration,\n    infinite,\n  } = sliderSettings;\n\n  const disablePrevButton = (position <= 0) && !infinite;\n  const disableNextButton = (position >= sliderProductList.length - itemsOnPage)\n    && !infinite;\n\n  const slideLimit = -((sliderProductList.length * itemWidth)\n    - (itemWidth * itemsOnPage));\n\n  const transformOptions = (position * itemWidth) >= slideLimit\n    ? (position * itemWidth)\n    : slideLimit;\n\n  const handleClickButton = (arrowDirection: SliderButtonType) => {\n    if (arrowDirection === 'prev') {\n      if (position - step >= 0) {\n        setPosition(position - step);\n      } else {\n        setPosition(sliderProductList.length + 1 - itemsOnPage - step);\n      }\n    }\n\n    if (arrowDirection === 'next') {\n      if ((position + step) < sliderProductList.length + 1 - itemsOnPage) {\n        setPosition(position + step);\n      } else {\n        setPosition(0);\n      }\n    }\n  };\n\n  const scrollSlider = () => {\n    if ((position < sliderProductList.length - itemsOnPage)) {\n      setPosition(position + 1);\n    }\n\n    if ((position === sliderProductList.length - itemsOnPage)) {\n      setPosition(0);\n    }\n  };\n\n  const sliderWidth = () => {\n    if (width > 1175) {\n      if (sliderProductList.length < 4) {\n        setItemsInSlider(sliderProductList.length);\n      } else {\n        setItemsInSlider(4);\n      }\n    }\n\n    if (width > 887 && width < 1176) {\n      if (sliderProductList.length < 3) {\n        setItemsInSlider(sliderProductList.length);\n      } else {\n        setItemsInSlider(3);\n      }\n    }\n\n    if (width > 599 && width < 888) {\n      if (sliderProductList.length < 2) {\n        setItemsInSlider(sliderProductList.length);\n      } else {\n        setItemsInSlider(2);\n      }\n    }\n\n    if (width < 599) {\n      setItemsInSlider(1);\n    }\n  };\n\n  const handleTouchStart = (event: React.TouchEvent) => {\n    const touchDown = event.touches[0].clientX || null;\n\n    setTouchPosition(touchDown);\n  };\n\n  const handleTouchMove = (event: React.TouchEvent) => {\n    const touchDown = touchPosition;\n\n    if (touchDown === null) {\n      return;\n    }\n\n    const currentTouch = event.touches[0].clientX;\n    const diff = touchDown - currentTouch;\n\n    if (diff > 5) {\n      handleClickButton('next');\n    }\n\n    if (diff < -5) {\n      handleClickButton('prev');\n    }\n\n    setTouchPosition(null);\n  };\n\n  useEffect(() => {\n    sliderWidth();\n  }, [width]);\n\n  useEffect(() => {\n    setPosition(0);\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      scrollSlider();\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [position]);\n\n  return (\n    <section\n      className=\"\n        page__section\n        product-slider\n        grid__item--tablet-1-12\n        grid__item--desktop-1-24\"\n    >\n      <div className=\"product-slider__header\">\n        <h1\n          className=\"\n            page__section-title\n            product-slider__title\"\n        >\n          {sliderTitle}\n        </h1>\n\n        <div\n          className=\"\n            product-slider__buttons\n            grid__item--tablet-10-12\n            grid__item--desktop-21-24\"\n        >\n          <button\n            className=\"\n              product-slider__button\n              grid__item--tablet-10-11\n              grid__item--desktop-21-22\"\n            type=\"button\"\n            aria-label=\"PREV\"\n            disabled={disablePrevButton}\n            onClick={() => handleClickButton('prev')}\n          >\n            {!disablePrevButton\n              && (\n                <Icon\n                  type={IconType.ARROW_LEFT}\n                />\n              )}\n\n            {disablePrevButton\n              && (\n                <Icon\n                  type={IconType.ARROW_LEFT_DISABLED}\n                />\n              )}\n          </button>\n\n          <button\n            className=\"\n              product-slider__button\n              grid__item--tablet-11-12\n              grid__item--desktop-23-24\"\n            type=\"button\"\n            aria-label=\"NEXT\"\n            disabled={disableNextButton}\n            onClick={() => handleClickButton('next')}\n          >\n            {!disableNextButton\n              && (\n                <Icon\n                  type={IconType.ARROW_RIGHT}\n                />\n              )}\n\n            {disableNextButton\n              && (\n                <Icon\n                  type={IconType.ARROW_RIGHT_DISABLED}\n                />\n              )}\n          </button>\n        </div>\n      </div>\n\n      {!error && (\n        <div\n          className=\"\n            product-slider__body\n            grid__item--tablet-1-12\n            grid__item--desktop-1-24\"\n          style={{\n            maxWidth: `${itemsOnPage * itemWidth}px`,\n          }}\n          onTouchStart={event => handleTouchStart(event)}\n          onTouchMove={event => handleTouchMove(event)}\n        >\n          <div\n            className=\"product-slider__container\"\n            data-cy=\"cardsContainer\"\n            style={{\n              transform: `translateX(-${transformOptions}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {sliderProductList.map(productItem => (\n              <ProductCard\n                key={productItem.id}\n                product={productItem}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <ErrorNotification\n          error={error}\n        />\n      )}\n    </section>\n  );\n};\n","import {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport uuid from 'react-uuid';\nimport { BackButton } from '../../components/BackButton';\nimport { CartCheckout } from '../../components/CartCheckout';\nimport { Context } from '../../components/Context';\nimport { Loader } from '../../components/Loader';\nimport { ProductCart } from '../../components/ProductCart';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { getUniqueItems } from '../../helpers/getUniqueItems';\nimport { Product } from '../../types/Product';\n\nexport const CartPage: React.FC = () => {\n  const { isLoading, cart } = useContext(Context);\n\n  const [cartList, setCartList] = useState<Product[]>([]);\n\n  const cartItems = () => {\n    const list = getUniqueItems(cart, (item: Product) => item.id);\n\n    setCartList(list);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    cartItems();\n  }, [cart.length]);\n\n  return (\n    <>\n      {isLoading\n        && <Loader />}\n\n      {!isLoading\n        && (\n          <div\n            className=\"\n              grid__item--tablet-1-12\n              grid__item--desktop-1-24\"\n          >\n            <BackButton />\n\n            <section className=\"page__section cart\">\n              <h1\n                className=\"\n                  page__section-title\n                  section__title\n                  cart__title\"\n              >\n                Cart\n              </h1>\n\n              {!cartList.length && (\n                <>\n                  <h2 className=\"cart__empty-title\">\n                    Your cart is empty...\n                  </h2>\n\n                  <ProductsSlider\n                    type=\"recommendations\"\n                  />\n                </>\n              )}\n\n              {cartList.length > 0 && (\n                <div\n                  className=\"\n                    cart__container\n                    grid\n                    grid--desktop\"\n                >\n                  <ul\n                    className=\"\n                      cart__list\n                      grid__item--tablet-1-12\n                      grid__item--desktop-1-16\"\n                  >\n                    {cartList.map(product => (\n                      <ProductCart\n                        key={uuid()}\n                        product={product}\n                      />\n                    ))}\n                  </ul>\n\n                  <CartCheckout />\n                </div>\n              )}\n            </section>\n          </div>\n        )}\n    </>\n  );\n};\n","export const capitalizeFirstLetter = (text: string) => {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n","import {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  Link,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { Context } from '../Context';\nimport { Icon } from '../Icon';\nimport { getProductDetails } from '../../api/products';\nimport { capitalizeFirstLetter } from '../../utils/styleString';\nimport { IconType } from '../../types/Icon';\nimport './PageNavStatus.scss';\n\nexport const PageNavStatus: React.FC = () => {\n  const { selectedProduct, setSelectedProduct } = useContext(Context);\n  const { productId = '' } = useParams();\n  const location = useLocation();\n\n  const [isProduct, setIsProduct] = useState(false);\n\n  const currentPage = location.pathname.split('/').slice(1)[0];\n  const currentPageTitle = capitalizeFirstLetter(currentPage);\n\n  const currentProductTitle = useMemo(() => {\n    if (!selectedProduct && productId) {\n      getProductDetails(productId)\n        .then((productItem) => {\n          setSelectedProduct(productItem);\n        });\n    }\n\n    return selectedProduct?.name;\n  }, [selectedProduct, productId]);\n\n  useEffect(() => {\n    if (productId.length > 0) {\n      setIsProduct(true);\n    } else {\n      setIsProduct(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"\n          category-page__status\n          status\n          grid__item--tablet-1-12\n          grid__item--desktop-1-24\"\n        data-cy=\"breadCrumbs\"\n      >\n        <Link\n          to=\"/\"\n          className=\"status__home\"\n        >\n          <Icon\n            type={IconType.HOME}\n          />\n        </Link>\n\n        <Icon\n          type={IconType.ARROW_RIGHT}\n          addClassName=\"status__arrow\"\n        />\n\n        {!isProduct\n          && (\n            <p className=\"status__title\">\n              {currentPageTitle}\n            </p>\n          )}\n\n        {isProduct\n          && (\n            <Link\n              to={`/${currentPage}`}\n              className=\"status__parent-title\"\n            >\n              {currentPageTitle}\n            </Link>\n          )}\n\n        {isProduct\n          && (\n            <>\n              <Icon\n                type={IconType.ARROW_RIGHT_DISABLED}\n                addClassName=\"status__arrow\"\n              />\n\n              <p className=\"status__title\">\n                {currentProductTitle}\n              </p>\n            </>\n          )}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Link,\n  useSearchParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { SelectorType } from '../../types/SelectorType';\nimport { IconType } from '../../types/Icon';\nimport './Selector.scss';\n\ntype Props = {\n  type: SelectorType,\n};\n\nexport const Selector: React.FC<Props> = ({ type }) => {\n  const [searchParams] = useSearchParams();\n\n  const [isOpened, setIsOpened] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('All');\n\n  const sort = searchParams.get('sort') || '';\n  const perPage = searchParams.get('perPage') || '';\n\n  const selectorTitle = (type === 'sort-by')\n    ? 'Sort by'\n    : 'Items on page';\n\n  const selectorSortByList: Record<string, string | null> = {\n    All: null,\n    Alphabetically: 'name',\n    Newest: 'age',\n    Cheapest: 'price',\n  };\n\n  const selectorItemsOnPageList: Record<string, string | null> = {\n    All: null,\n    4: '4',\n    8: '8',\n    16: '16',\n  };\n\n  const getSelectorValue = () => {\n    if (!sort.length || !perPage.length) {\n      setSelectedValue('All');\n    }\n\n    if (type === 'sort-by' && sort.length > 0) {\n      const sortOptions = Object.entries(selectorSortByList);\n      const sortItem = sortOptions.filter(item => item[1] === sort)[0][0];\n\n      setSelectedValue(sortItem);\n    }\n\n    if (type === 'items-on-page' && perPage.length > 0) {\n      const onPageOptions = Object.entries(selectorItemsOnPageList);\n      const onPageItem = onPageOptions.filter(\n        item => item[1] === perPage,\n      )[0][0];\n\n      setSelectedValue(onPageItem);\n    }\n  };\n\n  const selectorParams = (type === 'sort-by')\n    ? selectorSortByList\n    : selectorItemsOnPageList;\n\n  const selectorList = (type === 'sort-by')\n    ? Object.keys(selectorSortByList)\n    : Object.keys(selectorItemsOnPageList);\n\n  const getRouteParams = (\n    selectorType: string,\n    option: string,\n  ) => {\n    const sortByParams = {\n      sort: selectorParams[option],\n      perPage: searchParams.get('perPage'),\n      page: searchParams.get('page'),\n    };\n\n    const itemsOnPageParams = {\n      sort: searchParams.get('sort'),\n      perPage: selectorParams[option],\n      page: option === 'All' ? null : '1',\n    };\n\n    return (selectorType === 'sort-by')\n      ? sortByParams\n      : itemsOnPageParams;\n  };\n\n  const handleOptionClick = (option: string) => {\n    setSelectedValue(option);\n    setIsOpened(false);\n  };\n\n  useEffect(() => {\n    getSelectorValue();\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        { 'filters__sort-filter': type === 'sort-by' },\n        { 'filters__on-page-filter': type === 'items-on-page' },\n      )}\n      onMouseLeave={() => setIsOpened(false)}\n    >\n      <div className=\"filters__subtitle\">\n        {selectorTitle}\n      </div>\n\n      <div className=\"filters__filter\">\n        <div className=\"selector\">\n          <button\n            className=\"selector__picker\"\n            type=\"button\"\n            onClick={() => setIsOpened(!isOpened)}\n          >\n            <div className=\"selector__picker--title\">\n              {selectedValue}\n            </div>\n\n            <div className=\"selector__picker--arrow\">\n              {!isOpened\n                && (\n                  <Icon\n                    type={IconType.ARROW_DOWN}\n                  />\n                )}\n\n              {isOpened\n                && (\n                  <Icon\n                    type={IconType.ARROW_UP_DISABLED}\n                  />\n                )}\n            </div>\n          </button>\n\n          <ul\n            className={classNames(\n              'selector__list',\n              { 'selector__list--is-hidden': !isOpened },\n            )}\n          >\n            {selectorList.map(option => (\n              <Link\n                to={{\n                  search: getSearchWith(\n                    searchParams,\n                    getRouteParams(type, option),\n                  ),\n                }}\n                key={option}\n                className=\"selector__item\"\n                onClick={() => handleOptionClick(option)}\n              >\n                {option}\n              </Link>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport {\n  useNavigate,\n  useSearchParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { IconType } from '../../types/Icon';\nimport { SliderButtonType } from '../../types/SliderType';\nimport './Pagination.scss';\n\ntype Props = {\n  length: number,\n};\n\nexport const Pagination: React.FC<Props> = ({ length }) => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const perPage = searchParams.get('perPage');\n  const page = searchParams.get('page') || '1';\n\n  const getTotalPages = () => {\n    if (!perPage) {\n      return 0;\n    }\n\n    return Math.ceil(length / +perPage);\n  };\n\n  const paginationList = (getTotalPages() > 1)\n    ? (Array.from(\n      { length: getTotalPages() },\n      (_, i) => i + 1,\n    ))\n    : [1];\n\n  const disabledLeftButton = (page === '1');\n\n  const disabledRightButton = (page === '1')\n    ? (page === `${getTotalPages() + 1}`)\n    : (page === `${getTotalPages()}`);\n\n  const handlePageClick = (pageItem: number) => {\n    if (page === `${pageItem}`) {\n      return;\n    }\n\n    const newParams = getSearchWith(\n      searchParams, {\n        page: `${pageItem}`,\n      },\n    );\n\n    navigate({ search: newParams });\n  };\n\n  const handleArrowClick = (type: SliderButtonType) => {\n    const currentPage = page\n      ? +page\n      : null;\n\n    if (type === 'prev' && currentPage) {\n      if (currentPage === 1) {\n        return;\n      }\n\n      const newParams = getSearchWith(\n        searchParams, {\n          page: `${currentPage - 1}`,\n        },\n      );\n\n      navigate({ search: newParams });\n    }\n\n    if (type === 'next' && currentPage) {\n      if (currentPage === getTotalPages()) {\n        return;\n      }\n\n      const newParams = getSearchWith(\n        searchParams, {\n          page: `${currentPage + 1}`,\n        },\n      );\n\n      navigate({ search: newParams });\n    }\n  };\n\n  useEffect(() => {\n    getTotalPages();\n  }, [perPage, length]);\n\n  return (\n    <div className=\"category-page__pagination\">\n      <ul className=\"pagination\">\n        <button\n          type=\"button\"\n          className=\"pagination__button\"\n          data-cy=\"paginationLeft\"\n          disabled={disabledLeftButton}\n          onClick={() => handleArrowClick('prev')}\n        >\n          {!disabledLeftButton && (\n            <Icon\n              type={IconType.ARROW_LEFT}\n            />\n          )}\n\n          {disabledLeftButton && (\n            <Icon\n              type={IconType.ARROW_LEFT_DISABLED}\n            />\n          )}\n        </button>\n\n        <div className=\"pagination__list\">\n          {paginationList.map(pageNumber => (\n            <button\n              key={pageNumber}\n              type=\"button\"\n              className={\n                classNames('pagination__item', {\n                  'pagination__item--is-active':\n                    page\n                      ? +page === pageNumber\n                      : false,\n                })\n              }\n              onClick={() => handlePageClick(pageNumber)}\n            >\n              {pageNumber}\n            </button>\n          ))}\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"pagination__button\"\n          data-cy=\"paginationRight\"\n          disabled={disabledRightButton}\n          onClick={() => handleArrowClick('next')}\n        >\n          {!disabledRightButton && (\n            <Icon\n              type={IconType.ARROW_RIGHT}\n            />\n          )}\n\n          {disabledRightButton && (\n            <Icon\n              type={IconType.ARROW_RIGHT_DISABLED}\n            />\n          )}\n        </button>\n      </ul>\n    </div>\n  );\n};\n","import './NoResults.scss';\n\ntype Props = {\n  title: string,\n};\n\nexport const NoResults: React.FC<Props> = ({ title }) => (\n  <h1\n    className=\"\n      product-list__no-results\n      no-results\"\n  >\n    {`${title} is not found...`}\n  </h1>\n);\n","import {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { Context } from '../Context';\nimport { ProductCard } from '../ProductCard';\nimport { Selector } from '../Selector';\nimport { Pagination } from '../Pagination';\nimport { NoResults } from '../NoResults';\nimport productCategoryList from '../../api/productCategory.json';\nimport { useWindowSize } from '../../utils/useWindowSize';\nimport { capitalizeFirstLetter } from '../../utils/styleString';\nimport { Category } from '../../types/Category';\nimport { Product } from '../../types/Product';\nimport './ProductsList.scss';\n\nexport const ProductsList: React.FC = () => {\n  const { products, favorite } = useContext(Context);\n\n  const location = useLocation();\n  const { width } = useWindowSize();\n  const [searchParams] = useSearchParams();\n\n  const [category, setCategory] = useState<Category | null>(null);\n  const [categoryProducts, setCategoryProducts] = useState<Product[]>([]);\n  const [itemsInList, setItemsInList] = useState(1);\n\n  const currentCategoryPage = location.pathname.split('/').slice(1)[0];\n\n  const sort = searchParams.get('sort') || '';\n  const perPage = searchParams.get('perPage') || '';\n  const currentPage = searchParams.get('page') || '';\n  const query = searchParams.get('query') || '';\n\n  const getCategory = () => {\n    const currentCategory = productCategoryList.filter(\n      item => item.type === currentCategoryPage,\n    )[0];\n\n    setCategory(currentCategory);\n  };\n\n  const getCategoryProducts = () => {\n    if (!category) {\n      setCategoryProducts([]);\n    }\n\n    if (category) {\n      const categoryItems = products.filter(\n        product => product.type === category.itemType,\n      );\n\n      setCategoryProducts(categoryItems);\n    }\n  };\n\n  const getProductSortedList = (productBaseList: Product[]) => {\n    let sortedProducts = (currentCategoryPage === 'favorite')\n      ? [...favorite]\n      : [...productBaseList];\n\n    if (sort === 'age') {\n      sortedProducts = sortedProducts.sort(\n        (item1, item2) => item1.age - item2.age,\n      );\n    }\n\n    if (sort === 'name') {\n      sortedProducts = sortedProducts.sort(\n        (item1, item2) => item1.name.localeCompare(item2.name),\n      );\n    }\n\n    if (sort === 'price') {\n      sortedProducts = sortedProducts.sort(\n        (item1, item2) => item1.price - item2.price,\n      );\n    }\n\n    if (query) {\n      const queryFilter = (param?: string | null) => {\n        return param\n          ? param.toLowerCase().includes(query.toLowerCase())\n          : null;\n      };\n\n      sortedProducts = sortedProducts.filter(\n        product => queryFilter(product.name),\n      );\n    }\n\n    return sortedProducts || null;\n  };\n\n  const sortedProductList = getProductSortedList(categoryProducts);\n\n  let leftLimit = 0;\n  let rightLimit = sortedProductList.length;\n\n  if (currentPage && perPage) {\n    leftLimit = +perPage * (+currentPage - 1);\n\n    rightLimit = +perPage * +currentPage > sortedProductList.length\n      ? sortedProductList.length\n      : +perPage * +currentPage;\n  } else {\n    leftLimit = 0;\n    rightLimit = sortedProductList.length;\n  }\n\n  const visibleProducts = sortedProductList.slice(leftLimit, rightLimit);\n\n  const categoryCount = (currentCategoryPage === 'favorite')\n    ? favorite.length\n    : categoryProducts.length;\n\n  const noResultTitle = useMemo(() => {\n    if (currentCategoryPage === 'favorite') {\n      return 'Favorites';\n    }\n\n    if (!category) {\n      return 'Current item';\n    }\n\n    return capitalizeFirstLetter(category?.itemType);\n  }, [category]);\n\n  const productListSettings = {\n    itemWidth: 288,\n    itemsOnPage: itemsInList,\n  };\n\n  const {\n    itemWidth,\n    itemsOnPage,\n  } = productListSettings;\n\n  const productListWidth = () => {\n    if (width > 1193) {\n      setItemsInList(4);\n    }\n\n    if (width > 599 && width < 1193) {\n      setItemsInList(2);\n    }\n\n    if (width < 599) {\n      setItemsInList(1);\n    }\n  };\n\n  useEffect(() => {\n    productListWidth();\n  }, [width]);\n\n  useEffect(() => {\n    getCategory();\n  }, [location]);\n\n  useEffect(() => {\n    getCategoryProducts();\n  }, [category]);\n\n  return (\n    <section\n      className=\"\n        page__section\n        product-list\n        grid__item--tablet-1-12\n        grid__item--desktop-1-24\"\n    >\n      <h1\n        className=\"\n          page__section-title\n          section__title\n          product-list__title\"\n      >\n        {category?.title}\n      </h1>\n\n      <div className=\"product-list__count\">\n        {`${categoryCount} models`}\n      </div>\n\n      {currentCategoryPage !== 'favorite'\n        && (\n          <div\n            className=\"\n              product-list__filters\n              filters\"\n          >\n            <Selector\n              type=\"sort-by\"\n            />\n\n            <Selector\n              type=\"items-on-page\"\n            />\n          </div>\n        )}\n\n      <div className=\"product-list__products\">\n        {visibleProducts.length > 0\n            && (\n              <div\n                className=\"product-list__products-container\"\n                data-cy=\"productList\"\n                style={{\n                  maxWidth: `${itemsOnPage * itemWidth}px`,\n                }}\n              >\n                {visibleProducts.map(productItem => (\n                  <ProductCard\n                    key={productItem.id}\n                    product={productItem}\n                  />\n                ))}\n              </div>\n            )}\n\n        {!visibleProducts.length\n          && (\n            <NoResults\n              title={noResultTitle}\n            />\n          )}\n      </div>\n\n      {currentCategoryPage !== 'favorite'\n        && (\n          <Pagination\n            length={sortedProductList.length}\n          />\n        )}\n    </section>\n  );\n};\n","import { useContext, useEffect } from 'react';\nimport { Context } from '../../components/Context';\nimport { ErrorNotification } from '../../components/ErrorNotification';\nimport { Loader } from '../../components/Loader';\nimport { PageNavStatus } from '../../components/PageNavStatus';\nimport { ProductsList } from '../../components/ProductsList';\n\nexport const CategoryPage: React.FC = () => {\n  const { isLoading, error } = useContext(Context);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      {isLoading\n        && <Loader />}\n\n      {!isLoading\n        && (\n          <>\n            <PageNavStatus />\n\n            {!error && (\n              <ProductsList />\n            )}\n\n            {error && (\n              <ErrorNotification\n                error={error}\n              />\n            )}\n          </>\n        )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon';\nimport bannerImages from '../../api/banner.json';\nimport { useWindowSize } from '../../utils/useWindowSize';\nimport { SliderButtonType } from '../../types/SliderType';\nimport { IconType } from '../../types/Icon';\nimport './Banner.scss';\n\nexport const Banner: React.FC = () => {\n  const [position, setPosition] = useState(0);\n  const [touchPosition, setTouchPosition] = useState<number | null>(null);\n\n  const { width } = useWindowSize();\n\n  const handleClickButton = (arrowDirection: SliderButtonType) => {\n    if (arrowDirection === 'prev') {\n      if (position === 0) {\n        setPosition(2);\n      } else if (position < 3) {\n        setPosition(position - 1);\n      }\n    }\n\n    if (arrowDirection === 'next') {\n      if (position < 2) {\n        setPosition(position + 1);\n      } else if (position === 2) {\n        setPosition(0);\n      }\n    }\n  };\n\n  const handleTouchStart = (event: React.TouchEvent) => {\n    const touchDown = event.touches[0].clientX || null;\n\n    setTouchPosition(touchDown);\n  };\n\n  const handleTouchMove = (event: React.TouchEvent) => {\n    const touchDown = touchPosition;\n\n    if (touchDown === null) {\n      return;\n    }\n\n    const currentTouch = event.touches[0].clientX;\n    const diff = touchDown - currentTouch;\n\n    if (diff > 5) {\n      handleClickButton('next');\n    }\n\n    if (diff < -5) {\n      handleClickButton('prev');\n    }\n\n    setTouchPosition(null);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleClickButton('next');\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [position]);\n\n  return (\n    <section\n      className=\"\n        page__section\n        banner\n        grid__item--tablet-1-12\n        grid__item--desktop-1-24\"\n    >\n      <div className=\"banner__container\">\n        {width > 500 && (\n          <button\n            className=\"\n              banner__button\n              grid__item--tablet-1-1\n              grid__item--desktop-1-1\"\n            type=\"button\"\n            aria-label=\"PREV\"\n            onClick={() => handleClickButton('prev')}\n          >\n            <Icon\n              type={IconType.ARROW_LEFT}\n              addClassName=\"banner__button--icon\"\n            />\n          </button>\n        )}\n\n        <div\n          className=\"\n            banner__content\n            grid__item--tablet-2-11\n            grid__item--desktop-2-10\"\n          onTouchStart={event => handleTouchStart(event)}\n          onTouchMove={event => handleTouchMove(event)}\n        >\n          {bannerImages.map((item, index) => (\n            <img\n              key={`banner-picture-${index * bannerImages.length}`}\n              className={classNames(\n                'banner__image',\n                { 'banner__image--active': position === index },\n              )}\n              src={item.image}\n              alt=\"banner\"\n            />\n          ))}\n        </div>\n\n        {width > 500 && (\n          <button\n            className=\"\n              banner__button\n              grid__item--tablet-12-12\n              grid__item--desktop-24-24\"\n            type=\"button\"\n            aria-label=\"NEXT\"\n            onClick={() => handleClickButton('next')}\n          >\n            <Icon\n              type={IconType.ARROW_RIGHT}\n              addClassName=\"banner__button--icon\"\n            />\n          </button>\n        )}\n      </div>\n\n      <div\n        className=\"\n          banner__pagination\n          banner-pagination\"\n      >\n        {bannerImages.map((_, index) => (\n          <button\n            key={`banner-pagination-${index * bannerImages.length}`}\n            className={classNames(\n              'banner-pagination__item',\n              { 'banner-pagination__item--active': position === index },\n            )}\n            type=\"button\"\n            aria-label=\"NEXT\"\n            onClick={() => setPosition(index)}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n","import { useContext, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Context } from '../Context';\nimport productCategoryList from '../../api/productCategory.json';\nimport './ShopByCategory.scss';\n\nexport const ShopByCategory: React.FC = () => {\n  const { products } = useContext(Context);\n\n  const phones = useMemo(() => (\n    products.filter(product => product.type === 'phone')\n  ), [products]);\n\n  const tablets = useMemo(() => (\n    products.filter(product => product.type === 'tablet')\n  ), [products]);\n\n  const accessories = useMemo(() => (\n    products.filter(product => product.type === 'accessory')\n  ), [products]);\n\n  const categoryCount = (type: string) => {\n    switch (type) {\n      case 'phones':\n        return phones.length;\n\n      case 'tablets':\n        return tablets.length;\n\n      case 'accessory':\n        return accessories.length;\n\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <section\n      className=\"\n        page__section\n        categories\n        grid__item--tablet-1-12\n        grid__item--desktop-1-24\"\n    >\n      <h1 className=\"page__section-title categories__title\">\n        Shop by category\n      </h1>\n\n      <div\n        className=\"\n          categories__content\n          grid\n          grid--desktop\"\n        data-cy=\"categoryLinksContainer\"\n      >\n        {productCategoryList.map(category => (\n          <div\n            key={category.type}\n            className={classNames(\n              'categories__item-container',\n              { 'grid__item--tablet-1-4': category.type === 'phones' },\n              { 'grid__item--desktop-1-8': category.type === 'phones' },\n              { 'grid__item--tablet-5-8': category.type === 'tablets' },\n              { 'grid__item--desktop-9-16': category.type === 'tablets' },\n              { 'grid__item--tablet-9-12': category.type === 'accessories' },\n              {\n                'grid__item--desktop-17-24':\n                category.type === 'accessories',\n              },\n            )}\n          >\n            <Link\n              key={category.type}\n              to={category.url}\n              className=\"categories__item\"\n            >\n              <img\n                className={classNames(\n                  'categories__image',\n                  { 'categories__image--phones': category.type === 'phones' },\n                  { 'categories__image--tablets': category.type === 'tablets' },\n                  {\n                    'categories__image--accessories':\n                    category.type === 'accessories',\n                  },\n                )}\n                src={category.image}\n                alt={category.title}\n              />\n\n              <h3 className=\"categories__name\">\n                {category.title}\n              </h3>\n\n              <h4 className=\"categories__count\">\n                {`${categoryCount(category.type)} models`}\n              </h4>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n","import { useContext, useEffect } from 'react';\nimport { Banner } from '../../components/Banner';\nimport { Context } from '../../components/Context';\nimport { Loader } from '../../components/Loader';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { ShopByCategory } from '../../components/ShopByCategory';\n\nexport const HomePage: React.FC = () => {\n  const { isLoading } = useContext(Context);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      {isLoading\n        && <Loader />}\n\n      {!isLoading && (\n        <>\n          <Banner />\n\n          <ProductsSlider\n            type=\"hot-prices\"\n          />\n\n          <ShopByCategory />\n\n          <ProductsSlider\n            type=\"new-models\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n","import './NotFound.scss';\n\nexport const NotFound: React.FC = () => (\n  <>\n    <h1 className=\"not-found-page__title\">\n      Oh, no! Page is not found...\n    </h1>\n\n    <span className=\"not-found-page__image\" />\n  </>\n);\n","import { useContext, useEffect } from 'react';\nimport { BackButton } from '../../components/BackButton';\nimport { Context } from '../../components/Context';\nimport { Loader } from '../../components/Loader';\nimport { NotFound } from '../../components/NotFound';\n\nexport const NotFoundPage: React.FC = () => {\n  const { isLoading } = useContext(Context);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      {isLoading\n        && <Loader />}\n\n      {!isLoading\n        && (\n          <div\n            className=\"\n              grid__item--tablet-1-12\n              grid__item--desktop-1-24\"\n          >\n            <BackButton />\n\n            <NotFound />\n          </div>\n        )}\n    </>\n  );\n};\n","import {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Context } from '../Context';\nimport { ProductCardButton } from '../ProductCardButton';\nimport { Icon } from '../Icon';\nimport { getProductDetails } from '../../api/products';\nimport { useWindowSize } from '../../utils/useWindowSize';\nimport { ProductDetailsType } from '../../types/ProductDetails';\nimport { SliderButtonType } from '../../types/SliderType';\nimport { IconType } from '../../types/Icon';\nimport { Error } from '../../types/Error';\nimport './ProductDetails.scss';\n\nexport const ProductDetails: React.FC = () => {\n  const {\n    products,\n    selectedProduct,\n    error,\n    setError,\n    setIsLoading,\n  } = useContext(Context);\n\n  const { productId = '' } = useParams();\n  const { width } = useWindowSize();\n\n  const capacityList = [16, 256, 512];\n  const colourList = ['pink', 'grey', 'black', 'white'];\n\n  const defaultProductOptions = {\n    Screen: '',\n    Resolution: '',\n    Processor: '',\n    RAM: '',\n    'Built in memory': '',\n    Android: '',\n    Bluetooth: '',\n    Battery: '',\n  };\n\n  const defaultImage = selectedProduct\n    ? selectedProduct.images[0]\n    : '';\n\n  const defaultImagesLength = selectedProduct\n    ? selectedProduct.images.length\n    : 0;\n\n  const [productInfo, setProductInfo] = useState<ProductDetailsType>();\n  const [productOptions, setProductOptions] = useState(defaultProductOptions);\n  const [selectedCapacity, setSelectedCapacity] = useState(capacityList[0]);\n  const [selectedColour, setSelectedColour] = useState(colourList[0]);\n  const [selectedImage, setSelectedImage] = useState(defaultImage);\n  const [itemsInSlider, setItemsInSlider] = useState(2);\n  const [position, setPosition] = useState(0);\n  const [touchPosition, setTouchPosition] = useState<number | null>(null);\n\n  const productItem = products.find(\n    item => item.id === productInfo?.id,\n  ) || null;\n\n  const optionsMainList = Object.entries(productOptions).slice(0, 4);\n  const optionsTotalList = Object.entries(productOptions);\n\n  const getDiscountPrice = (\n    price: number,\n    discount: number,\n  ) => price - (price / 100) * discount;\n\n  const getProductInfo = async (valueId: string) => {\n    setError(null);\n\n    try {\n      const item = await getProductDetails(valueId);\n\n      setProductInfo(item);\n    } catch {\n      setError(Error.GET_PRODUCT_DETAILS);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const sliderSettings = {\n    step: 1,\n    itemHeight: 97,\n    itemsOnPage: itemsInSlider,\n    animationDuration: 500,\n    infinite: false,\n  };\n\n  const {\n    step,\n    itemHeight,\n    itemsOnPage,\n    animationDuration,\n    infinite,\n  } = sliderSettings;\n\n  const disablePrevButton = (position <= 0) && !infinite;\n  const disableNextButton = (\n    position >= defaultImagesLength - itemsOnPage)\n      && !infinite;\n\n  const slideLimit = -((defaultImagesLength * itemHeight)\n    - (itemHeight * itemsOnPage));\n\n  const transformOptions = (position * itemHeight) >= slideLimit\n    ? (position * itemHeight)\n    : slideLimit;\n\n  const handleClickButton = (arrowDirection: SliderButtonType) => {\n    if (arrowDirection === 'prev') {\n      if (position - step >= 0) {\n        setPosition(position - step);\n      } else {\n        setPosition(defaultImagesLength + 1 - itemsOnPage - step);\n      }\n    }\n\n    if (arrowDirection === 'next') {\n      if ((position + step) < defaultImagesLength + 1 - itemsOnPage) {\n        setPosition(position + step);\n      } else {\n        setPosition(0);\n      }\n    }\n  };\n\n  const sliderHeight = () => {\n    if (width > 640) {\n      if (defaultImagesLength < 4) {\n        setItemsInSlider(defaultImagesLength);\n      } else {\n        setItemsInSlider(4);\n      }\n    }\n\n    if (width < 640) {\n      if (defaultImagesLength < 2) {\n        setItemsInSlider(defaultImagesLength);\n      } else {\n        setItemsInSlider(2);\n      }\n    }\n  };\n\n  const handleTouchStart = (event: React.TouchEvent) => {\n    const touchDown = event.touches[0].clientY || null;\n\n    setTouchPosition(touchDown);\n  };\n\n  const handleTouchMove = (event: React.TouchEvent) => {\n    const touchDown = touchPosition;\n\n    if (touchDown === null) {\n      return;\n    }\n\n    const currentTouch = event.touches[0].clientY;\n    const diff = touchDown - currentTouch;\n\n    if (diff > 5) {\n      handleClickButton('next');\n    }\n\n    if (diff < -5) {\n      handleClickButton('prev');\n    }\n\n    setTouchPosition(null);\n  };\n\n  useEffect(() => {\n    sliderHeight();\n  }, [width]);\n\n  useEffect(() => {\n    setPosition(0);\n  }, []);\n\n  useEffect(() => {\n    if (selectedProduct && productId.length > 0) {\n      getProductInfo(productId);\n\n      setProductOptions({\n        Screen: selectedProduct.display.screenSize,\n        Resolution: selectedProduct.display.screenResolution,\n        Processor: selectedProduct.hardware.cpu,\n        RAM: selectedProduct.storage.ram,\n        'Built in memory': selectedProduct.storage.flash,\n        Android: selectedProduct.android.os,\n        Bluetooth: selectedProduct.connectivity.bluetooth,\n        Battery: selectedProduct.battery.standbyTime,\n      });\n    }\n  }, [productId]);\n\n  useEffect(() => {\n    if (!selectedProduct && productItem) {\n      getProductInfo(productItem.id);\n    }\n  }, [productId]);\n\n  return (\n    <>\n      {selectedProduct\n        && productItem\n        && !error\n        && (\n          <section\n            className=\"\n              page__section\n              product-details\n              grid__item--tablet-1-12\n              grid__item--desktop-1-24\"\n          >\n            <h1\n              className=\"\n                page__section-title\n                section__title\n                product-details__title\"\n            >\n              {productInfo?.name}\n            </h1>\n\n            <div\n              className=\"\n                product-details__main-details\n                main-details\"\n            >\n              <div className=\"grid grid--desktop\">\n                <div\n                  className=\"\n                    main-details__product-id\n                    grid__item--tablet-11-12\n                    grid__item--desktop-23-24\"\n                >\n                  ID: 890246\n                </div>\n\n                <div\n                  className=\"\n                    main-details__product-images\n                    product-images\n                    grid__item--tablet-1-6\n                    grid__item--desktop-1-12\"\n                >\n                  <div\n                    className=\"\n                      product-images__sidebar\n                      images-sidebar\"\n                  >\n                    <button\n                      className=\"\n                        images-sidebar__button\n                        images-sidebar__button--prev\"\n                      type=\"button\"\n                      aria-label=\"PREV\"\n                      disabled={disablePrevButton}\n                      onClick={() => handleClickButton('prev')}\n                    >\n                      {!disablePrevButton\n                        && (\n                          <Icon\n                            type={IconType.ARROW_UP}\n                            addClassName=\"images-sidebar__button--icon\"\n                          />\n                        )}\n\n                      {disablePrevButton\n                        && (\n                          <Icon\n                            type={IconType.ARROW_UP_DISABLED}\n                            addClassName=\"images-sidebar__button--icon\"\n                          />\n                        )}\n                    </button>\n\n                    <div\n                      className=\"small-images\"\n                      style={{\n                        height: `${itemHeight * itemsOnPage}px`,\n                        touchAction: 'none',\n                      }}\n                      onTouchStart={event => handleTouchStart(event)}\n                      onTouchMove={event => handleTouchMove(event)}\n                    >\n                      <div\n                        className=\"\n                          product-images__small-images\n                          images-sidebar__images\n                          small-images__container\"\n                        style={{\n                          transform: `translateY(-${transformOptions}px)`,\n                          transition: `${animationDuration}ms`,\n                        }}\n                      >\n                        {selectedProduct.images.map(\n                          (imageItem, imageIndex) => (\n                            <div\n                              key={imageItem}\n                              role=\"button\"\n                              className={classNames(\n                                'small-images__image',\n                                {\n                                  'small-images__image--is-active':\n                                  selectedImage === imageItem,\n                                },\n                              )}\n                              tabIndex={imageIndex}\n                              onClick={() => setSelectedImage(imageItem)}\n                              onKeyDown={() => setSelectedImage(imageItem)}\n                            >\n                              <img\n                                src={imageItem}\n                                alt=\"smallImage\"\n                                className=\"additional-image\"\n                              />\n                            </div>\n                          ),\n                        )}\n                      </div>\n                    </div>\n\n                    <button\n                      className=\"\n                        images-sidebar__button\n                        images-sidebar__button--next\"\n                      type=\"button\"\n                      aria-label=\"NEXT\"\n                      disabled={disableNextButton}\n                      onClick={() => handleClickButton('next')}\n                    >\n                      {!disableNextButton\n                        && (\n                          <Icon\n                            type={IconType.ARROW_DOWN}\n                            addClassName=\"images-sidebar__button--icon\"\n                          />\n                        )}\n\n                      {disableNextButton\n                        && (\n                          <Icon\n                            type={IconType.ARROW_DOWN_DISABLED}\n                            addClassName=\"images-sidebar__button--icon\"\n                          />\n                        )}\n                    </button>\n                  </div>\n\n                  <div className=\"product-images__main-image\">\n                    <img\n                      src={selectedImage}\n                      alt=\"mainImage\"\n                      className=\"main-image\"\n                    />\n                  </div>\n                </div>\n\n                <div\n                  className=\"\n                    main-details__options\n                    options\n                    grid__item--tablet-8-11\n                    grid__item--desktop-14-20\"\n                >\n                  <div\n                    className=\"\n                      options__colors colors\n                      grid__item--tablet-8-11\n                      grid__item--desktop-14-22\"\n                  >\n                    <h2 className=\"options__subtitle\">\n                      Available colors\n                    </h2>\n\n                    <ul className=\"colors__list\">\n                      {colourList.map((colourItem, colourIndex) => (\n                        <div\n                          key={colourItem}\n                          role=\"button\"\n                          className={classNames(\n                            'colors__item-circle',\n                            {\n                              'colors__item-circle--is-active':\n                                selectedColour === colourItem,\n                            },\n                          )}\n                          tabIndex={colourIndex}\n                          onClick={() => setSelectedColour(colourItem)}\n                          onKeyDown={() => setSelectedColour(colourItem)}\n                        >\n                          <li\n                            className={classNames(\n                              'colors__item',\n                              `colors__item--${colourItem}`,\n                            )}\n                          />\n                        </div>\n                      ))}\n                    </ul>\n                  </div>\n\n                  <div className=\"options__capacity capacity\">\n                    <h2 className=\"options__subtitle\">\n                      Select capacity\n                    </h2>\n\n                    <div className=\"capacity__list\">\n                      {capacityList.map(capacityItem => (\n                        <button\n                          key={capacityItem}\n                          type=\"button\"\n                          className={classNames(\n                            'capacity__item',\n                            {\n                              'capacity__item--is-active':\n                                selectedCapacity === capacityItem,\n                            },\n                          )}\n                          onClick={() => setSelectedCapacity(capacityItem)}\n                        >\n                          {`${capacityItem} GB`}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"options__price prices\">\n                    <div className=\"prices__container\">\n                      <div className=\"prices__new-price\">\n                        {productItem?.discount > 0\n                          ? `$${getDiscountPrice(\n                            productItem?.price,\n                            productItem?.discount,\n                          )}`\n                          : `$${productItem?.price}`}\n                      </div>\n\n                      {productItem?.discount > 0\n                        && (\n                          <div className=\"prices__old-price\">\n                            {`$${productItem?.price}`}\n                          </div>\n                        )}\n                    </div>\n                  </div>\n\n                  <div className=\"options__buttons card-buttons\">\n                    <ProductCardButton\n                      product={productItem}\n                      type=\"cart\"\n                      size=\"big\"\n                    />\n\n                    <ProductCardButton\n                      product={productItem}\n                      type=\"favorite\"\n                      size=\"big\"\n                    />\n                  </div>\n\n                  <div className=\"options__detail-options\">\n                    <ul className=\"detail-options__list\">\n                      {optionsMainList.map(item => (\n                        <li\n                          key={item[0]}\n                          className=\"detail-options__item\"\n                        >\n                          <div className=\"detail-options__item--title\">\n                            {item[0]}\n                          </div>\n\n                          <div className=\"detail-options__item--value\">\n                            {item[1] || 'N/A'}\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              className=\"\n                product-details__additional-details\n                additional-details\"\n            >\n              <div\n                className=\"\n                  grid\n                  grid--desktop\"\n                data-cy=\"productDescription\"\n              >\n                <div\n                  className=\"\n                    additional-details__about\n                    grid__item--tablet-1-6\n                    grid__item--desktop-1-12\"\n                >\n                  <h1 className=\"additional-details__title\">\n                    About\n                  </h1>\n\n                  <div className=\"additional-details__text\">\n                    {selectedProduct.description}\n                  </div>\n                </div>\n\n                <div\n                  className=\"\n                    additional-details__specs\n                    grid__item--tablet-8-12\n                    grid__item--desktop-14-24\"\n                >\n                  <h1 className=\"additional-details__title\">\n                    Tech specs\n                  </h1>\n\n                  <div className=\"additional-details__options\">\n                    <ul className=\"detail-options__list\">\n                      {optionsTotalList.map(item => (\n                        <li\n                          key={item[0]}\n                          className=\"detail-options__item\"\n                        >\n                          <div\n                            className=\"\n                                detail-options__item--title\n                                detail-options__item--title--big\"\n                          >\n                            {item[0]}\n                          </div>\n\n                          <div\n                            className=\"\n                                detail-options__item--value\n                                detail-options__item--value--big\"\n                          >\n                            {item[1] || 'N/A'}\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n    </>\n  );\n};\n","import { useContext, useEffect } from 'react';\nimport { BackButton } from '../../components/BackButton';\nimport { Context } from '../../components/Context';\nimport { ErrorNotification } from '../../components/ErrorNotification';\nimport { Loader } from '../../components/Loader';\nimport { PageNavStatus } from '../../components/PageNavStatus';\nimport { ProductDetails } from '../../components/ProductDetails';\nimport { ProductsSlider } from '../../components/ProductsSlider';\n\nexport const ProductDetailsPage: React.FC = () => {\n  const { isLoading, error } = useContext(Context);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      {isLoading\n        && <Loader />}\n\n      {!isLoading\n        && (\n          <>\n            <PageNavStatus />\n\n            <BackButton />\n\n            {!error && (\n              <>\n                <ProductDetails />\n\n                <ProductsSlider\n                  type=\"recommendations\"\n                />\n              </>\n            )}\n\n            {error && (\n              <ErrorNotification\n                error={error}\n              />\n            )}\n          </>\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { ContextProvider } from './components/Context';\nimport { CartPage } from './pages/CartPage';\nimport { CategoryPage } from './pages/CategoryPage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\n\nconst Root = () => (\n  <Router>\n    <ContextProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"phones\" element={<CategoryPage />} />\n          <Route\n            path=\"phones/:productId\"\n            element={<ProductDetailsPage />}\n          />\n\n          <Route path=\"tablets\" element={<CategoryPage />} />\n          <Route\n            path=\"tablets/:productId\"\n            element={<ProductDetailsPage />}\n          />\n\n          <Route path=\"accessories\" element={<CategoryPage />} />\n          <Route\n            path=\"accessories/:productId\"\n            element={<ProductDetailsPage />}\n          />\n\n          <Route path=\"favorite\" element={<CategoryPage />} />\n          <Route path=\"cart\" element={<CartPage />} />\n        </Route>\n      </Routes>\n    </ContextProvider>\n  </Router>\n);\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}